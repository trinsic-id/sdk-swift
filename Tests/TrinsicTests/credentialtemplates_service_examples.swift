
// BEGIN Doc Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: C:\work\sdk-swift\Tests\TrinsicTests\credentialtemplates_service_examples.swift
// createCredentialTemplatesService() {
import Trinsic
let credentialTemplateService = TemplateService()
credentialTemplateService.options.authToken = "[Your auth token]"
// }

final class CredentialTemplatesExamples {
    func createTemplate() throws {
        // credentialTemplatesCreate() {
        var request = Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest()
        request.name = "my-unique-template-id"
        request.title = "My template"
        request.description_p = "A more elaborate description of my template"
        request.allowAdditionalFields = true
        
        var firstNameField = Services_Verifiablecredentials_Templates_V1_TemplateField()
        firstNameField.title = "First name"
        firstNameField.description_p = "Your first name"
        firstNameField.optional = true
        firstNameField.type = Services_Verifiablecredentials_Templates_V1_FieldType.string
        
        var lastNameField = Services_Verifiablecredentials_Templates_V1_TemplateField()
        lastNameField.title = "Last name"
        lastNameField.description_p = "Your last name"
        lastNameField.optional = false
        lastNameField.type = Services_Verifiablecredentials_Templates_V1_FieldType.string
        
        var yearBorn = Services_Verifiablecredentials_Templates_V1_TemplateField()
        yearBorn.optional = false;
        yearBorn.type = Services_Verifiablecredentials_Templates_V1_FieldType.number
        yearBorn.title = "Year born"
        yearBorn.description_p = "The year you were born"
        
        request.fields = ["first-name-id": firstNameField, "last-name-id": lastNameField, "year-born-id": yearBorn]
        
        var firstNameOrdering = Services_Verifiablecredentials_Templates_V1_FieldOrdering()
        firstNameOrdering.order = 1
        firstNameOrdering.section = "Name"
        
        var lastNameOrdering = Services_Verifiablecredentials_Templates_V1_FieldOrdering()
        firstNameOrdering.order = 2
        firstNameOrdering.section = "Name"

        var yearBornOrdering = Services_Verifiablecredentials_Templates_V1_FieldOrdering()
        firstNameOrdering.order = 3
        firstNameOrdering.section = "Personal details"
        
        request.fieldOrdering = ["first-name-id": firstNameOrdering, "last-name-id": lastNameOrdering, "year-born-id": yearBornOrdering ]
        
        let response = try credentialTemplateService.create(request: request)
        // }
    }
    
    func getTemplate() throws {
        // credentialTemplatesGet() {
        var request = Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest()
        request.id = "urn:template:your-ecosystem:my-unique-templateid"
        let response = try credentialTemplateService.get(request:request)
        // }
    }
    
    func updateTemplate() throws {
        // credentialTemplatesUpdate() {
        //TODO, missing from SDK
        // }
    }
    
    
    func listCredentialTemplates() throws {
        // credentialTemplatesList() {
        var request = Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest()
        //This is the default query, so you can choose not to specify it
        request.query = "SELECT * FROM c OFFSET 0 LIMIT 100"
        
        var templates: [Services_Verifiablecredentials_Templates_V1_TemplateData] = []
        var continuationToken: String = .init()
        repeat {
            let response = try credentialTemplateService.list(request: request)
            templates.append(contentsOf: response.templates)
            if(response.hasMoreResults_p){
                continuationToken = response.continuationToken
            }
            
        } while(!continuationToken.isEmpty)
        // }
    }
    
    func searchCredentialTemplates() throws {
        // credentialTemplatesSearch() {
        var request = Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest()
        //This is the default query, so you can choose not to specify it
        request.query = "SELECT * FROM c OFFSET 0 LIMIT 100"
        var result: [String] = []
        var continuationToken: String = .init()
        repeat {
            let response = try credentialTemplateService.search(request: request)
            result.append(response.itemsJson)
            if(response.hasMore_p){
                continuationToken = response.continuationToken
            }
            
        } while(!continuationToken.isEmpty)
        // }
    }
    
    func deleteTemplate() throws {
        // credentialTemplatesDelete() {
        var request = Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest()
        request.id = "my-unique-template-id"
        let _ = try credentialTemplateService.delete(request: request)
        // }
    }
    
    
    
    // END Doc Code generated by protoc-gen-trinsic. DO NOT EDIT.
}

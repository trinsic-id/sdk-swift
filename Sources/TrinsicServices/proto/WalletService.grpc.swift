//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: WalletService.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate `Trinsic_Services_WalletClient`, then call methods of this protocol to make API calls.
internal protocol Trinsic_Services_WalletClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Trinsic_Services_WalletClientInterceptorFactoryProtocol? { get }

  func getProviderConfiguration(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Trinsic_Services_GetProviderConfigurationResponse>

  func connectExternalIdentity(
    _ request: Trinsic_Services_ConnectRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Trinsic_Services_ConnectRequest, Trinsic_Services_ConnectResponse>

  func createWallet(
    _ request: Trinsic_Services_CreateWalletRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Trinsic_Services_CreateWalletRequest, Trinsic_Services_CreateWalletResponse>

  func createWalletWithWorkflow(
    _ request: Trinsic_Services_CreateWalletRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Trinsic_Services_CreateWalletRequest, Trinsic_Services_CreateWalletResponse>

  func createWalletEncrypted(
    _ request: Pbmse_EncryptedMessage,
    callOptions: CallOptions?
  ) -> UnaryCall<Pbmse_EncryptedMessage, Pbmse_EncryptedMessage>

  func search(
    _ request: Trinsic_Services_SearchRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Trinsic_Services_SearchRequest, Trinsic_Services_SearchResponse>

  func insertItem(
    _ request: Trinsic_Services_InsertItemRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Trinsic_Services_InsertItemRequest, Trinsic_Services_InsertItemResponse>

  func grantAccess(
    _ request: Trinsic_Services_GrantAccessRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Trinsic_Services_GrantAccessRequest, Trinsic_Services_GrantAccessResponse>

  func revokeAccess(
    _ request: Trinsic_Services_RevokeAccessRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Trinsic_Services_RevokeAccessRequest, Trinsic_Services_RevokeAccessResponse>
}

extension Trinsic_Services_WalletClientProtocol {
  internal var serviceName: String {
    return "trinsic.services.Wallet"
  }

  /// Unary call to GetProviderConfiguration
  ///
  /// - Parameters:
  ///   - request: Request to send to GetProviderConfiguration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getProviderConfiguration(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Trinsic_Services_GetProviderConfigurationResponse> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/GetProviderConfiguration",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetProviderConfigurationInterceptors() ?? []
    )
  }

  /// Unary call to ConnectExternalIdentity
  ///
  /// - Parameters:
  ///   - request: Request to send to ConnectExternalIdentity.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func connectExternalIdentity(
    _ request: Trinsic_Services_ConnectRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Trinsic_Services_ConnectRequest, Trinsic_Services_ConnectResponse> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/ConnectExternalIdentity",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeConnectExternalIdentityInterceptors() ?? []
    )
  }

  /// Unary call to CreateWallet
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateWallet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createWallet(
    _ request: Trinsic_Services_CreateWalletRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Trinsic_Services_CreateWalletRequest, Trinsic_Services_CreateWalletResponse> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/CreateWallet",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateWalletInterceptors() ?? []
    )
  }

  /// Unary call to CreateWalletWithWorkflow
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateWalletWithWorkflow.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createWalletWithWorkflow(
    _ request: Trinsic_Services_CreateWalletRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Trinsic_Services_CreateWalletRequest, Trinsic_Services_CreateWalletResponse> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/CreateWalletWithWorkflow",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateWalletWithWorkflowInterceptors() ?? []
    )
  }

  /// Unary call to CreateWalletEncrypted
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateWalletEncrypted.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createWalletEncrypted(
    _ request: Pbmse_EncryptedMessage,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Pbmse_EncryptedMessage, Pbmse_EncryptedMessage> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/CreateWalletEncrypted",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateWalletEncryptedInterceptors() ?? []
    )
  }

  /// Unary call to Search
  ///
  /// - Parameters:
  ///   - request: Request to send to Search.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func search(
    _ request: Trinsic_Services_SearchRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Trinsic_Services_SearchRequest, Trinsic_Services_SearchResponse> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/Search",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchInterceptors() ?? []
    )
  }

  /// Unary call to InsertItem
  ///
  /// - Parameters:
  ///   - request: Request to send to InsertItem.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func insertItem(
    _ request: Trinsic_Services_InsertItemRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Trinsic_Services_InsertItemRequest, Trinsic_Services_InsertItemResponse> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/InsertItem",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInsertItemInterceptors() ?? []
    )
  }

  /// Unary call to GrantAccess
  ///
  /// - Parameters:
  ///   - request: Request to send to GrantAccess.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func grantAccess(
    _ request: Trinsic_Services_GrantAccessRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Trinsic_Services_GrantAccessRequest, Trinsic_Services_GrantAccessResponse> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/GrantAccess",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGrantAccessInterceptors() ?? []
    )
  }

  /// Unary call to RevokeAccess
  ///
  /// - Parameters:
  ///   - request: Request to send to RevokeAccess.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func revokeAccess(
    _ request: Trinsic_Services_RevokeAccessRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Trinsic_Services_RevokeAccessRequest, Trinsic_Services_RevokeAccessResponse> {
    return self.makeUnaryCall(
      path: "/trinsic.services.Wallet/RevokeAccess",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRevokeAccessInterceptors() ?? []
    )
  }
}

internal protocol Trinsic_Services_WalletClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'getProviderConfiguration'.
  func makeGetProviderConfigurationInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Trinsic_Services_GetProviderConfigurationResponse>]

  /// - Returns: Interceptors to use when invoking 'connectExternalIdentity'.
  func makeConnectExternalIdentityInterceptors() -> [ClientInterceptor<Trinsic_Services_ConnectRequest, Trinsic_Services_ConnectResponse>]

  /// - Returns: Interceptors to use when invoking 'createWallet'.
  func makeCreateWalletInterceptors() -> [ClientInterceptor<Trinsic_Services_CreateWalletRequest, Trinsic_Services_CreateWalletResponse>]

  /// - Returns: Interceptors to use when invoking 'createWalletWithWorkflow'.
  func makeCreateWalletWithWorkflowInterceptors() -> [ClientInterceptor<Trinsic_Services_CreateWalletRequest, Trinsic_Services_CreateWalletResponse>]

  /// - Returns: Interceptors to use when invoking 'createWalletEncrypted'.
  func makeCreateWalletEncryptedInterceptors() -> [ClientInterceptor<Pbmse_EncryptedMessage, Pbmse_EncryptedMessage>]

  /// - Returns: Interceptors to use when invoking 'search'.
  func makeSearchInterceptors() -> [ClientInterceptor<Trinsic_Services_SearchRequest, Trinsic_Services_SearchResponse>]

  /// - Returns: Interceptors to use when invoking 'insertItem'.
  func makeInsertItemInterceptors() -> [ClientInterceptor<Trinsic_Services_InsertItemRequest, Trinsic_Services_InsertItemResponse>]

  /// - Returns: Interceptors to use when invoking 'grantAccess'.
  func makeGrantAccessInterceptors() -> [ClientInterceptor<Trinsic_Services_GrantAccessRequest, Trinsic_Services_GrantAccessResponse>]

  /// - Returns: Interceptors to use when invoking 'revokeAccess'.
  func makeRevokeAccessInterceptors() -> [ClientInterceptor<Trinsic_Services_RevokeAccessRequest, Trinsic_Services_RevokeAccessResponse>]
}

internal final class Trinsic_Services_WalletClient: Trinsic_Services_WalletClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Trinsic_Services_WalletClientInterceptorFactoryProtocol?

  /// Creates a client for the trinsic.services.Wallet service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Trinsic_Services_WalletClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Trinsic_Services_WalletProvider: CallHandlerProvider {
  var interceptors: Trinsic_Services_WalletServerInterceptorFactoryProtocol? { get }

  func getProviderConfiguration(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<Trinsic_Services_GetProviderConfigurationResponse>

  func connectExternalIdentity(request: Trinsic_Services_ConnectRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Trinsic_Services_ConnectResponse>

  func createWallet(request: Trinsic_Services_CreateWalletRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Trinsic_Services_CreateWalletResponse>

  func createWalletWithWorkflow(request: Trinsic_Services_CreateWalletRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Trinsic_Services_CreateWalletResponse>

  func createWalletEncrypted(request: Pbmse_EncryptedMessage, context: StatusOnlyCallContext) -> EventLoopFuture<Pbmse_EncryptedMessage>

  func search(request: Trinsic_Services_SearchRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Trinsic_Services_SearchResponse>

  func insertItem(request: Trinsic_Services_InsertItemRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Trinsic_Services_InsertItemResponse>

  func grantAccess(request: Trinsic_Services_GrantAccessRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Trinsic_Services_GrantAccessResponse>

  func revokeAccess(request: Trinsic_Services_RevokeAccessRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Trinsic_Services_RevokeAccessResponse>
}

extension Trinsic_Services_WalletProvider {
  internal var serviceName: Substring { return "trinsic.services.Wallet" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetProviderConfiguration":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<Trinsic_Services_GetProviderConfigurationResponse>(),
        interceptors: self.interceptors?.makeGetProviderConfigurationInterceptors() ?? [],
        userFunction: self.getProviderConfiguration(request:context:)
      )

    case "ConnectExternalIdentity":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Trinsic_Services_ConnectRequest>(),
        responseSerializer: ProtobufSerializer<Trinsic_Services_ConnectResponse>(),
        interceptors: self.interceptors?.makeConnectExternalIdentityInterceptors() ?? [],
        userFunction: self.connectExternalIdentity(request:context:)
      )

    case "CreateWallet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Trinsic_Services_CreateWalletRequest>(),
        responseSerializer: ProtobufSerializer<Trinsic_Services_CreateWalletResponse>(),
        interceptors: self.interceptors?.makeCreateWalletInterceptors() ?? [],
        userFunction: self.createWallet(request:context:)
      )

    case "CreateWalletWithWorkflow":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Trinsic_Services_CreateWalletRequest>(),
        responseSerializer: ProtobufSerializer<Trinsic_Services_CreateWalletResponse>(),
        interceptors: self.interceptors?.makeCreateWalletWithWorkflowInterceptors() ?? [],
        userFunction: self.createWalletWithWorkflow(request:context:)
      )

    case "CreateWalletEncrypted":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Pbmse_EncryptedMessage>(),
        responseSerializer: ProtobufSerializer<Pbmse_EncryptedMessage>(),
        interceptors: self.interceptors?.makeCreateWalletEncryptedInterceptors() ?? [],
        userFunction: self.createWalletEncrypted(request:context:)
      )

    case "Search":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Trinsic_Services_SearchRequest>(),
        responseSerializer: ProtobufSerializer<Trinsic_Services_SearchResponse>(),
        interceptors: self.interceptors?.makeSearchInterceptors() ?? [],
        userFunction: self.search(request:context:)
      )

    case "InsertItem":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Trinsic_Services_InsertItemRequest>(),
        responseSerializer: ProtobufSerializer<Trinsic_Services_InsertItemResponse>(),
        interceptors: self.interceptors?.makeInsertItemInterceptors() ?? [],
        userFunction: self.insertItem(request:context:)
      )

    case "GrantAccess":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Trinsic_Services_GrantAccessRequest>(),
        responseSerializer: ProtobufSerializer<Trinsic_Services_GrantAccessResponse>(),
        interceptors: self.interceptors?.makeGrantAccessInterceptors() ?? [],
        userFunction: self.grantAccess(request:context:)
      )

    case "RevokeAccess":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Trinsic_Services_RevokeAccessRequest>(),
        responseSerializer: ProtobufSerializer<Trinsic_Services_RevokeAccessResponse>(),
        interceptors: self.interceptors?.makeRevokeAccessInterceptors() ?? [],
        userFunction: self.revokeAccess(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Trinsic_Services_WalletServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'getProviderConfiguration'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetProviderConfigurationInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Trinsic_Services_GetProviderConfigurationResponse>]

  /// - Returns: Interceptors to use when handling 'connectExternalIdentity'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeConnectExternalIdentityInterceptors() -> [ServerInterceptor<Trinsic_Services_ConnectRequest, Trinsic_Services_ConnectResponse>]

  /// - Returns: Interceptors to use when handling 'createWallet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateWalletInterceptors() -> [ServerInterceptor<Trinsic_Services_CreateWalletRequest, Trinsic_Services_CreateWalletResponse>]

  /// - Returns: Interceptors to use when handling 'createWalletWithWorkflow'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateWalletWithWorkflowInterceptors() -> [ServerInterceptor<Trinsic_Services_CreateWalletRequest, Trinsic_Services_CreateWalletResponse>]

  /// - Returns: Interceptors to use when handling 'createWalletEncrypted'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateWalletEncryptedInterceptors() -> [ServerInterceptor<Pbmse_EncryptedMessage, Pbmse_EncryptedMessage>]

  /// - Returns: Interceptors to use when handling 'search'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSearchInterceptors() -> [ServerInterceptor<Trinsic_Services_SearchRequest, Trinsic_Services_SearchResponse>]

  /// - Returns: Interceptors to use when handling 'insertItem'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInsertItemInterceptors() -> [ServerInterceptor<Trinsic_Services_InsertItemRequest, Trinsic_Services_InsertItemResponse>]

  /// - Returns: Interceptors to use when handling 'grantAccess'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGrantAccessInterceptors() -> [ServerInterceptor<Trinsic_Services_GrantAccessRequest, Trinsic_Services_GrantAccessResponse>]

  /// - Returns: Interceptors to use when handling 'revokeAccess'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRevokeAccessInterceptors() -> [ServerInterceptor<Trinsic_Services_RevokeAccessRequest, Trinsic_Services_RevokeAccessResponse>]
}

//
//  FileManagementService.swift
//
//
//  Created by Tomislav Markovski on 11/30/21.
//

import Foundation
import GRPC

public class FileManagementService: ServiceBase {
    var client: Services_Filemanagement_V1_FileManagementNIOClient?

    public init() {
        super.init(options: Sdk_Options_V1_ServiceOptions())
        client = Services_Filemanagement_V1_FileManagementNIOClient(channel: createChannel())
    }

    override public init(options: Sdk_Options_V1_ServiceOptions) {
        super.init(options: options)
        client = Services_Filemanagement_V1_FileManagementNIOClient(channel: createChannel())
    }

// BEGIN Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: /home/runner/work/sdk-swift/sdk-swift/Sources/Trinsic/FileManagementService.swift

    @available(*, deprecated, message: "This method is experimental")
    public func uploadFile(request: Services_Filemanagement_V1_UploadFileRequest) throws -> Services_Filemanagement_V1_UploadFileResponse {
        return try client!.UploadFile(request, callOptions: try buildMetadata(request))
            .response
            .wait()
    }
    @available(*, deprecated, message: "This method is experimental")
    public func getFile(request: Services_Filemanagement_V1_GetFileRequest) throws -> Services_Filemanagement_V1_GetFileResponse {
        return try client!.GetFile(request, callOptions: try buildMetadata(request))
            .response
            .wait()
    }
    @available(*, deprecated, message: "This method is experimental")
    public func deleteFile(request: Services_Filemanagement_V1_DeleteFileRequest) throws -> Services_Filemanagement_V1_DeleteFileResponse {
        return try client!.DeleteFile(request, callOptions: try buildMetadata(request))
            .response
            .wait()
    }
    @available(*, deprecated, message: "This method is experimental")
    public func listFiles(request: Services_Filemanagement_V1_ListFilesRequest) throws -> Services_Filemanagement_V1_ListFilesResponse {
        return try client!.ListFiles(request, callOptions: try buildMetadata(request))
            .response
            .wait()
    }
    @available(*, deprecated, message: "This method is experimental")
    public func getStorageStats(request: Services_Filemanagement_V1_GetStorageStatsRequest) throws -> Services_Filemanagement_V1_GetStorageStatsResponse {
        return try client!.GetStorageStats(request, callOptions: try buildMetadata(request))
            .response
            .wait()
    }
// END Code generated by protoc-gen-trinsic. DO NOT EDIT.
}

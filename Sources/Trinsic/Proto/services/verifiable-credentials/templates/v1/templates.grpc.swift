//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: services/verifiable-credentials/templates/v1/templates.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf

/// Usage: instantiate `Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClient`, then call methods of this protocol to make API calls.
public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientProtocol: GRPCClient {
    var serviceName: String { get }
    var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? { get }

    func Create(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>

    func Get(
        _ request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>

    func List(
        _ request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>

    func Search(
        _ request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>

    func Delete(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>
}

public extension Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientProtocol {
    var serviceName: String {
        return "services.verifiablecredentials.templates.v1.CredentialTemplates"
    }

    /// Unary call to Create
    ///
    /// - Parameters:
    ///   - request: Request to send to Create.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Create(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse> {
        return makeUnaryCall(
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Create",
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeCreateInterceptors() ?? []
        )
    }

    /// Unary call to Get
    ///
    /// - Parameters:
    ///   - request: Request to send to Get.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Get(
        _ request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse> {
        return makeUnaryCall(
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Get",
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeGetInterceptors() ?? []
        )
    }

    /// Unary call to List
    ///
    /// - Parameters:
    ///   - request: Request to send to List.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func List(
        _ request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse> {
        return makeUnaryCall(
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/List",
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeListInterceptors() ?? []
        )
    }

    /// Unary call to Search
    ///
    /// - Parameters:
    ///   - request: Request to send to Search.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Search(
        _ request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse> {
        return makeUnaryCall(
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Search",
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeSearchInterceptors() ?? []
        )
    }

    /// Unary call to Delete
    ///
    /// - Parameters:
    ///   - request: Request to send to Delete.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Delete(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse> {
        return makeUnaryCall(
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Delete",
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeDeleteInterceptors() ?? []
        )
    }
}

public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol {
    /// - Returns: Interceptors to use when invoking 'Create'.
    func makeCreateInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when invoking 'Get'.
    func makeGetInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when invoking 'List'.
    func makeListInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>]

    /// - Returns: Interceptors to use when invoking 'Search'.
    func makeSearchInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>]

    /// - Returns: Interceptors to use when invoking 'Delete'.
    func makeDeleteInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>]
}

public final class Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClient: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientProtocol {
    public let channel: GRPCChannel
    public var defaultCallOptions: CallOptions
    public var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol?

    /// Creates a client for the services.verifiablecredentials.templates.v1.CredentialTemplates service.
    ///
    /// - Parameters:
    ///   - channel: `GRPCChannel` to the service host.
    ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
    ///   - interceptors: A factory providing interceptors for each RPC.
    public init(
        channel: GRPCChannel,
        defaultCallOptions: CallOptions = CallOptions(),
        interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? = nil
    ) {
        self.channel = channel
        self.defaultCallOptions = defaultCallOptions
        self.interceptors = interceptors
    }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesProvider: CallHandlerProvider {
    var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerInterceptorFactoryProtocol? { get }

    func Create(request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>

    func Get(request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>

    func List(request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>

    func Search(request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>

    func Delete(request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>
}

public extension Services_Verifiablecredentials_Templates_V1_CredentialTemplatesProvider {
    var serviceName: Substring { return "services.verifiablecredentials.templates.v1.CredentialTemplates" }

    /// Determines, calls and returns the appropriate request handler, depending on the request's method.
    /// Returns nil for methods not handled by this service.
    func handle(
        method name: Substring,
        context: CallHandlerContext
    ) -> GRPCServerHandlerProtocol? {
        switch name {
        case "Create":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>(),
                interceptors: interceptors?.makeCreateInterceptors() ?? [],
                userFunction: Create(request:context:)
            )

        case "Get":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>(),
                interceptors: interceptors?.makeGetInterceptors() ?? [],
                userFunction: Get(request:context:)
            )

        case "List":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>(),
                interceptors: interceptors?.makeListInterceptors() ?? [],
                userFunction: List(request:context:)
            )

        case "Search":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>(),
                interceptors: interceptors?.makeSearchInterceptors() ?? [],
                userFunction: Search(request:context:)
            )

        case "Delete":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>(),
                interceptors: interceptors?.makeDeleteInterceptors() ?? [],
                userFunction: Delete(request:context:)
            )

        default:
            return nil
        }
    }
}

public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerInterceptorFactoryProtocol {
    /// - Returns: Interceptors to use when handling 'Create'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeCreateInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when handling 'Get'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeGetInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when handling 'List'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeListInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>]

    /// - Returns: Interceptors to use when handling 'Search'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeSearchInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>]

    /// - Returns: Interceptors to use when handling 'Delete'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeDeleteInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>]
}

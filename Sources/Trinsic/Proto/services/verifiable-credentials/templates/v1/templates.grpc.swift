//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: services/verifiable-credentials/templates/v1/templates.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf

/// Usage: instantiate `Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClient`, then call methods of this protocol to make API calls.
public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientProtocol: GRPCClient {
    var serviceName: String { get }
    var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? { get }

    func Create(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>

    func Get(
        _ request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>

    func Update(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse>

    func List(
        _ request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>

    func Search(
        _ request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>

    func Delete(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>

    func CreateVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse>

    func ListVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse>

    func UpdateVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse>

    func DeleteVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest,
        callOptions: CallOptions?
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse>
}

public extension Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientProtocol {
    var serviceName: String {
        "services.verifiablecredentials.templates.v1.CredentialTemplates"
    }

    /// Create a credential template in the current ecosystem
    ///
    /// - Parameters:
    ///   - request: Request to send to Create.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Create(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Create.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeCreateInterceptors() ?? []
        )
    }

    /// Fetch a credential template by ID
    ///
    /// - Parameters:
    ///   - request: Request to send to Get.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Get(
        _ request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Get.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeGetInterceptors() ?? []
        )
    }

    /// Update metadata of a template
    ///
    /// - Parameters:
    ///   - request: Request to send to Update.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Update(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Update.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeUpdateInterceptors() ?? []
        )
    }

    /// Search credential templates using SQL, returning strongly-typed template data
    ///
    /// - Parameters:
    ///   - request: Request to send to List.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func List(
        _ request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.List.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeListInterceptors() ?? []
        )
    }

    /// Search credential templates using SQL, returning raw JSON data
    ///
    /// - Parameters:
    ///   - request: Request to send to Search.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Search(
        _ request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Search.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeSearchInterceptors() ?? []
        )
    }

    /// Delete a credential template from the current ecosystem by ID
    ///
    /// - Parameters:
    ///   - request: Request to send to Delete.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func Delete(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Delete.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeDeleteInterceptors() ?? []
        )
    }

    /// Create/update verification templates
    ///
    /// - Parameters:
    ///   - request: Request to send to CreateVerificationTemplate.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func CreateVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.CreateVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeCreateVerificationTemplateInterceptors() ?? []
        )
    }

    /// Unary call to ListVerificationTemplate
    ///
    /// - Parameters:
    ///   - request: Request to send to ListVerificationTemplate.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func ListVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.ListVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeListVerificationTemplateInterceptors() ?? []
        )
    }

    /// Unary call to UpdateVerificationTemplate
    ///
    /// - Parameters:
    ///   - request: Request to send to UpdateVerificationTemplate.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func UpdateVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.UpdateVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeUpdateVerificationTemplateInterceptors() ?? []
        )
    }

    /// Unary call to DeleteVerificationTemplate
    ///
    /// - Parameters:
    ///   - request: Request to send to DeleteVerificationTemplate.
    ///   - callOptions: Call options.
    /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
    func DeleteVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> UnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse> {
        makeUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.DeleteVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeDeleteVerificationTemplateInterceptors() ?? []
        )
    }
}

@available(*, deprecated)
extension Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Services_Verifiablecredentials_Templates_V1_CredentialTemplatesNIOClient")
public final class Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClient: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientProtocol {
    private let lock = Lock()
    private var _defaultCallOptions: CallOptions
    private var _interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol?
    public let channel: GRPCChannel
    public var defaultCallOptions: CallOptions {
        get { lock.withLock { self._defaultCallOptions } }
        set { lock.withLockVoid { self._defaultCallOptions = newValue } }
    }

    public var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? {
        get { lock.withLock { self._interceptors } }
        set { lock.withLockVoid { self._interceptors = newValue } }
    }

    /// Creates a client for the services.verifiablecredentials.templates.v1.CredentialTemplates service.
    ///
    /// - Parameters:
    ///   - channel: `GRPCChannel` to the service host.
    ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
    ///   - interceptors: A factory providing interceptors for each RPC.
    public init(
        channel: GRPCChannel,
        defaultCallOptions: CallOptions = CallOptions(),
        interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? = nil
    ) {
        self.channel = channel
        _defaultCallOptions = defaultCallOptions
        _interceptors = interceptors
    }
}

public struct Services_Verifiablecredentials_Templates_V1_CredentialTemplatesNIOClient: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientProtocol {
    public var channel: GRPCChannel
    public var defaultCallOptions: CallOptions
    public var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol?

    /// Creates a client for the services.verifiablecredentials.templates.v1.CredentialTemplates service.
    ///
    /// - Parameters:
    ///   - channel: `GRPCChannel` to the service host.
    ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
    ///   - interceptors: A factory providing interceptors for each RPC.
    public init(
        channel: GRPCChannel,
        defaultCallOptions: CallOptions = CallOptions(),
        interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? = nil
    ) {
        self.channel = channel
        self.defaultCallOptions = defaultCallOptions
        self.interceptors = interceptors
    }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesAsyncClientProtocol: GRPCClient {
    static var serviceDescriptor: GRPCServiceDescriptor { get }
    var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? { get }

    func makeCreateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>

    func makeGetCall(
        _ request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>

    func makeUpdateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse>

    func makeListCall(
        _ request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>

    func makeSearchCall(
        _ request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>

    func makeDeleteCall(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>

    func makeCreateVerificationTemplateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse>

    func makeListVerificationTemplateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse>

    func makeUpdateVerificationTemplateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse>

    func makeDeleteVerificationTemplateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest,
        callOptions: CallOptions?
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public extension Services_Verifiablecredentials_Templates_V1_CredentialTemplatesAsyncClientProtocol {
    static var serviceDescriptor: GRPCServiceDescriptor {
        Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.serviceDescriptor
    }

    var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? {
        nil
    }

    func makeCreateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Create.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeCreateInterceptors() ?? []
        )
    }

    func makeGetCall(
        _ request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Get.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeGetInterceptors() ?? []
        )
    }

    func makeUpdateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Update.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeUpdateInterceptors() ?? []
        )
    }

    func makeListCall(
        _ request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.List.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeListInterceptors() ?? []
        )
    }

    func makeSearchCall(
        _ request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Search.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeSearchInterceptors() ?? []
        )
    }

    func makeDeleteCall(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Delete.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeDeleteInterceptors() ?? []
        )
    }

    func makeCreateVerificationTemplateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.CreateVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeCreateVerificationTemplateInterceptors() ?? []
        )
    }

    func makeListVerificationTemplateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.ListVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeListVerificationTemplateInterceptors() ?? []
        )
    }

    func makeUpdateVerificationTemplateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.UpdateVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeUpdateVerificationTemplateInterceptors() ?? []
        )
    }

    func makeDeleteVerificationTemplateCall(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) -> GRPCAsyncUnaryCall<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse> {
        makeAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.DeleteVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeDeleteVerificationTemplateInterceptors() ?? []
        )
    }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public extension Services_Verifiablecredentials_Templates_V1_CredentialTemplatesAsyncClientProtocol {
    func Create(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Create.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeCreateInterceptors() ?? []
        )
    }

    func Get(
        _ request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Get.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeGetInterceptors() ?? []
        )
    }

    func Update(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Update.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeUpdateInterceptors() ?? []
        )
    }

    func List(
        _ request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.List.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeListInterceptors() ?? []
        )
    }

    func Search(
        _ request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Search.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeSearchInterceptors() ?? []
        )
    }

    func Delete(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Delete.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeDeleteInterceptors() ?? []
        )
    }

    func CreateVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.CreateVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeCreateVerificationTemplateInterceptors() ?? []
        )
    }

    func ListVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.ListVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeListVerificationTemplateInterceptors() ?? []
        )
    }

    func UpdateVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.UpdateVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeUpdateVerificationTemplateInterceptors() ?? []
        )
    }

    func DeleteVerificationTemplate(
        _ request: Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest,
        callOptions: CallOptions? = nil
    ) async throws -> Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse {
        try await performAsyncUnaryCall(
            path: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.DeleteVerificationTemplate.path,
            request: request,
            callOptions: callOptions ?? defaultCallOptions,
            interceptors: interceptors?.makeDeleteVerificationTemplateInterceptors() ?? []
        )
    }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Services_Verifiablecredentials_Templates_V1_CredentialTemplatesAsyncClient: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesAsyncClientProtocol {
    public var channel: GRPCChannel
    public var defaultCallOptions: CallOptions
    public var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol?

    public init(
        channel: GRPCChannel,
        defaultCallOptions: CallOptions = CallOptions(),
        interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol? = nil
    ) {
        self.channel = channel
        self.defaultCallOptions = defaultCallOptions
        self.interceptors = interceptors
    }
}

public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientInterceptorFactoryProtocol: Sendable {
    /// - Returns: Interceptors to use when invoking 'Create'.
    func makeCreateInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when invoking 'Get'.
    func makeGetInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when invoking 'Update'.
    func makeUpdateInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when invoking 'List'.
    func makeListInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>]

    /// - Returns: Interceptors to use when invoking 'Search'.
    func makeSearchInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>]

    /// - Returns: Interceptors to use when invoking 'Delete'.
    func makeDeleteInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when invoking 'CreateVerificationTemplate'.
    func makeCreateVerificationTemplateInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse>]

    /// - Returns: Interceptors to use when invoking 'ListVerificationTemplate'.
    func makeListVerificationTemplateInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse>]

    /// - Returns: Interceptors to use when invoking 'UpdateVerificationTemplate'.
    func makeUpdateVerificationTemplateInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse>]

    /// - Returns: Interceptors to use when invoking 'DeleteVerificationTemplate'.
    func makeDeleteVerificationTemplateInterceptors() -> [ClientInterceptor<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse>]
}

public enum Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata {
    public static let serviceDescriptor = GRPCServiceDescriptor(
        name: "CredentialTemplates",
        fullName: "services.verifiablecredentials.templates.v1.CredentialTemplates",
        methods: [
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Create,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Get,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Update,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.List,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Search,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.Delete,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.CreateVerificationTemplate,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.ListVerificationTemplate,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.UpdateVerificationTemplate,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesClientMetadata.Methods.DeleteVerificationTemplate,
        ]
    )

    public enum Methods {
        public static let Create = GRPCMethodDescriptor(
            name: "Create",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Create",
            type: GRPCCallType.unary
        )

        public static let Get = GRPCMethodDescriptor(
            name: "Get",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Get",
            type: GRPCCallType.unary
        )

        public static let Update = GRPCMethodDescriptor(
            name: "Update",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Update",
            type: GRPCCallType.unary
        )

        public static let List = GRPCMethodDescriptor(
            name: "List",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/List",
            type: GRPCCallType.unary
        )

        public static let Search = GRPCMethodDescriptor(
            name: "Search",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Search",
            type: GRPCCallType.unary
        )

        public static let Delete = GRPCMethodDescriptor(
            name: "Delete",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Delete",
            type: GRPCCallType.unary
        )

        public static let CreateVerificationTemplate = GRPCMethodDescriptor(
            name: "CreateVerificationTemplate",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/CreateVerificationTemplate",
            type: GRPCCallType.unary
        )

        public static let ListVerificationTemplate = GRPCMethodDescriptor(
            name: "ListVerificationTemplate",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/ListVerificationTemplate",
            type: GRPCCallType.unary
        )

        public static let UpdateVerificationTemplate = GRPCMethodDescriptor(
            name: "UpdateVerificationTemplate",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/UpdateVerificationTemplate",
            type: GRPCCallType.unary
        )

        public static let DeleteVerificationTemplate = GRPCMethodDescriptor(
            name: "DeleteVerificationTemplate",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/DeleteVerificationTemplate",
            type: GRPCCallType.unary
        )
    }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesProvider: CallHandlerProvider {
    var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerInterceptorFactoryProtocol? { get }

    /// Create a credential template in the current ecosystem
    func Create(request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>

    /// Fetch a credential template by ID
    func Get(request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>

    /// Update metadata of a template
    func Update(request: Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse>

    /// Search credential templates using SQL, returning strongly-typed template data
    func List(request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>

    /// Search credential templates using SQL, returning raw JSON data
    func Search(request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>

    /// Delete a credential template from the current ecosystem by ID
    func Delete(request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>

    /// Create/update verification templates
    func CreateVerificationTemplate(request: Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse>

    func ListVerificationTemplate(request: Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse>

    func UpdateVerificationTemplate(request: Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse>

    func DeleteVerificationTemplate(request: Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse>
}

public extension Services_Verifiablecredentials_Templates_V1_CredentialTemplatesProvider {
    var serviceName: Substring {
        Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.serviceDescriptor.fullName[...]
    }

    /// Determines, calls and returns the appropriate request handler, depending on the request's method.
    /// Returns nil for methods not handled by this service.
    func handle(
        method name: Substring,
        context: CallHandlerContext
    ) -> GRPCServerHandlerProtocol? {
        switch name {
        case "Create":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>(),
                interceptors: interceptors?.makeCreateInterceptors() ?? [],
                userFunction: Create(request:context:)
            )

        case "Get":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>(),
                interceptors: interceptors?.makeGetInterceptors() ?? [],
                userFunction: Get(request:context:)
            )

        case "Update":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse>(),
                interceptors: interceptors?.makeUpdateInterceptors() ?? [],
                userFunction: Update(request:context:)
            )

        case "List":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>(),
                interceptors: interceptors?.makeListInterceptors() ?? [],
                userFunction: List(request:context:)
            )

        case "Search":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>(),
                interceptors: interceptors?.makeSearchInterceptors() ?? [],
                userFunction: Search(request:context:)
            )

        case "Delete":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>(),
                interceptors: interceptors?.makeDeleteInterceptors() ?? [],
                userFunction: Delete(request:context:)
            )

        case "CreateVerificationTemplate":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse>(),
                interceptors: interceptors?.makeCreateVerificationTemplateInterceptors() ?? [],
                userFunction: CreateVerificationTemplate(request:context:)
            )

        case "ListVerificationTemplate":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse>(),
                interceptors: interceptors?.makeListVerificationTemplateInterceptors() ?? [],
                userFunction: ListVerificationTemplate(request:context:)
            )

        case "UpdateVerificationTemplate":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse>(),
                interceptors: interceptors?.makeUpdateVerificationTemplateInterceptors() ?? [],
                userFunction: UpdateVerificationTemplate(request:context:)
            )

        case "DeleteVerificationTemplate":
            return UnaryServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse>(),
                interceptors: interceptors?.makeDeleteVerificationTemplateInterceptors() ?? [],
                userFunction: DeleteVerificationTemplate(request:context:)
            )

        default:
            return nil
        }
    }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesAsyncProvider: CallHandlerProvider, Sendable {
    static var serviceDescriptor: GRPCServiceDescriptor { get }
    var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerInterceptorFactoryProtocol? { get }

    /// Create a credential template in the current ecosystem
    func Create(
        request: Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse

    /// Fetch a credential template by ID
    func Get(
        request: Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse

    /// Update metadata of a template
    func Update(
        request: Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse

    /// Search credential templates using SQL, returning strongly-typed template data
    func List(
        request: Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse

    /// Search credential templates using SQL, returning raw JSON data
    func Search(
        request: Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse

    /// Delete a credential template from the current ecosystem by ID
    func Delete(
        request: Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse

    /// Create/update verification templates
    func CreateVerificationTemplate(
        request: Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse

    func ListVerificationTemplate(
        request: Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse

    func UpdateVerificationTemplate(
        request: Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse

    func DeleteVerificationTemplate(
        request: Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest,
        context: GRPCAsyncServerCallContext
    ) async throws -> Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public extension Services_Verifiablecredentials_Templates_V1_CredentialTemplatesAsyncProvider {
    static var serviceDescriptor: GRPCServiceDescriptor {
        Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.serviceDescriptor
    }

    var serviceName: Substring {
        Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.serviceDescriptor.fullName[...]
    }

    var interceptors: Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerInterceptorFactoryProtocol? {
        nil
    }

    func handle(
        method name: Substring,
        context: CallHandlerContext
    ) -> GRPCServerHandlerProtocol? {
        switch name {
        case "Create":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>(),
                interceptors: interceptors?.makeCreateInterceptors() ?? [],
                wrapping: { try await self.Create(request: $0, context: $1) }
            )

        case "Get":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>(),
                interceptors: interceptors?.makeGetInterceptors() ?? [],
                wrapping: { try await self.Get(request: $0, context: $1) }
            )

        case "Update":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse>(),
                interceptors: interceptors?.makeUpdateInterceptors() ?? [],
                wrapping: { try await self.Update(request: $0, context: $1) }
            )

        case "List":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>(),
                interceptors: interceptors?.makeListInterceptors() ?? [],
                wrapping: { try await self.List(request: $0, context: $1) }
            )

        case "Search":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>(),
                interceptors: interceptors?.makeSearchInterceptors() ?? [],
                wrapping: { try await self.Search(request: $0, context: $1) }
            )

        case "Delete":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>(),
                interceptors: interceptors?.makeDeleteInterceptors() ?? [],
                wrapping: { try await self.Delete(request: $0, context: $1) }
            )

        case "CreateVerificationTemplate":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse>(),
                interceptors: interceptors?.makeCreateVerificationTemplateInterceptors() ?? [],
                wrapping: { try await self.CreateVerificationTemplate(request: $0, context: $1) }
            )

        case "ListVerificationTemplate":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse>(),
                interceptors: interceptors?.makeListVerificationTemplateInterceptors() ?? [],
                wrapping: { try await self.ListVerificationTemplate(request: $0, context: $1) }
            )

        case "UpdateVerificationTemplate":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse>(),
                interceptors: interceptors?.makeUpdateVerificationTemplateInterceptors() ?? [],
                wrapping: { try await self.UpdateVerificationTemplate(request: $0, context: $1) }
            )

        case "DeleteVerificationTemplate":
            return GRPCAsyncServerHandler(
                context: context,
                requestDeserializer: ProtobufDeserializer<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest>(),
                responseSerializer: ProtobufSerializer<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse>(),
                interceptors: interceptors?.makeDeleteVerificationTemplateInterceptors() ?? [],
                wrapping: { try await self.DeleteVerificationTemplate(request: $0, context: $1) }
            )

        default:
            return nil
        }
    }
}

public protocol Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerInterceptorFactoryProtocol: Sendable {
    /// - Returns: Interceptors to use when handling 'Create'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeCreateInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when handling 'Get'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeGetInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_GetCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when handling 'Update'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeUpdateInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when handling 'List'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeListInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListCredentialTemplatesResponse>]

    /// - Returns: Interceptors to use when handling 'Search'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeSearchInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesRequest, Services_Verifiablecredentials_Templates_V1_SearchCredentialTemplatesResponse>]

    /// - Returns: Interceptors to use when handling 'Delete'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeDeleteInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteCredentialTemplateResponse>]

    /// - Returns: Interceptors to use when handling 'CreateVerificationTemplate'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeCreateVerificationTemplateInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_CreateVerificationTemplateResponse>]

    /// - Returns: Interceptors to use when handling 'ListVerificationTemplate'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeListVerificationTemplateInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesRequest, Services_Verifiablecredentials_Templates_V1_ListVerificationTemplatesResponse>]

    /// - Returns: Interceptors to use when handling 'UpdateVerificationTemplate'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeUpdateVerificationTemplateInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_UpdateVerificationTemplateResponse>]

    /// - Returns: Interceptors to use when handling 'DeleteVerificationTemplate'.
    ///   Defaults to calling `self.makeInterceptors()`.
    func makeDeleteVerificationTemplateInterceptors() -> [ServerInterceptor<Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateRequest, Services_Verifiablecredentials_Templates_V1_DeleteVerificationTemplateResponse>]
}

public enum Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata {
    public static let serviceDescriptor = GRPCServiceDescriptor(
        name: "CredentialTemplates",
        fullName: "services.verifiablecredentials.templates.v1.CredentialTemplates",
        methods: [
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.Create,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.Get,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.Update,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.List,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.Search,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.Delete,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.CreateVerificationTemplate,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.ListVerificationTemplate,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.UpdateVerificationTemplate,
            Services_Verifiablecredentials_Templates_V1_CredentialTemplatesServerMetadata.Methods.DeleteVerificationTemplate,
        ]
    )

    public enum Methods {
        public static let Create = GRPCMethodDescriptor(
            name: "Create",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Create",
            type: GRPCCallType.unary
        )

        public static let Get = GRPCMethodDescriptor(
            name: "Get",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Get",
            type: GRPCCallType.unary
        )

        public static let Update = GRPCMethodDescriptor(
            name: "Update",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Update",
            type: GRPCCallType.unary
        )

        public static let List = GRPCMethodDescriptor(
            name: "List",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/List",
            type: GRPCCallType.unary
        )

        public static let Search = GRPCMethodDescriptor(
            name: "Search",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Search",
            type: GRPCCallType.unary
        )

        public static let Delete = GRPCMethodDescriptor(
            name: "Delete",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/Delete",
            type: GRPCCallType.unary
        )

        public static let CreateVerificationTemplate = GRPCMethodDescriptor(
            name: "CreateVerificationTemplate",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/CreateVerificationTemplate",
            type: GRPCCallType.unary
        )

        public static let ListVerificationTemplate = GRPCMethodDescriptor(
            name: "ListVerificationTemplate",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/ListVerificationTemplate",
            type: GRPCCallType.unary
        )

        public static let UpdateVerificationTemplate = GRPCMethodDescriptor(
            name: "UpdateVerificationTemplate",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/UpdateVerificationTemplate",
            type: GRPCCallType.unary
        )

        public static let DeleteVerificationTemplate = GRPCMethodDescriptor(
            name: "DeleteVerificationTemplate",
            path: "/services.verifiablecredentials.templates.v1.CredentialTemplates/DeleteVerificationTemplate",
            type: GRPCCallType.unary
        )
    }
}
